#include "driverapp.h"
#include "ui_driverapp.h"

DriverApp::DriverApp(QWidget *parent) : QMainWindow(parent), ui(new Ui::DriverApp)
{
    ui->setupUi(this);

    // –ø–æ–≤—ã—à–∞–µ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if (SetPrivilege()) {
        qDebug() << "SetPrivilege(): Success";
    } else {
        qDebug() << "SetPrivilege(): Error";
    }

    // –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–≥—Ä—É–∑–∫–∏ –¥—Ä–∞–π–≤–µ—Ä–∞
    connect(ui->LoadButton, SIGNAL (clicked()), this, SLOT (load()));
    connect(ui->UnloadButton, SIGNAL (clicked()), this, SLOT (unload()));

    //
    connect(ui->SendButton, SIGNAL (clicked()), this, SLOT (sendMessage()));
}

void DriverApp::load()
{
    HRESULT resultLoad = FilterLoad(L"passThrough");

    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
    if (IS_ERROR(resultLoad)) {
        std::string error = std::system_category().message(resultLoad);
        ui->statusLabel->setText("üõà –û—à–∏–±–∫–∞: " + QString::fromLocal8Bit(error.c_str()));
    } else {
        ui->statusLabel->setText("üõà –£—Å–ø–µ—Ö: –¥—Ä–∞–π–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω");
    }
}

void DriverApp::unload()
{
    HRESULT resultUnload = FilterUnload(L"passThrough");

    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
    if (IS_ERROR(resultUnload)) {
        std::string error = std::system_category().message(resultUnload);
        ui->statusLabel->setText("üõà –û—à–∏–±–∫–∞: " + QString::fromLocal8Bit(error.c_str()));
    } else {
        ui->statusLabel->setText("üõà –£—Å–ø–µ—Ö: –¥—Ä–∞–π–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω");
    }
}

bool DriverApp::connectPort()
{
    HRESULT hResult = FilterConnectCommunicationPort(L"\\passThrough", NULL, NULL, NULL, NULL, &hPort);

    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
    if (IS_ERROR(hResult)) {
        std::string error = std::system_category().message(hResult);
        ui->statusLabel->setText("üõà –û—à–∏–±–∫–∞: " + QString::fromLocal8Bit(error.c_str()));
        return false;
    }

    return true;
}

void DriverApp::disconnectPort()
{
    if (NULL != hPort) {
        CloseHandle(hPort);
        hPort = NULL;
    }
}

void DriverApp::sendMessage()
{
    if (connectPort()) {
        DWORD BytesReturned;
        char key[16];
        char iv[16];
        char text[32];

        QString text_key = ui->KeyField->text();
        strncpy(key, qPrintable(text_key), 15);
        qDebug() << key;

        QString text_iv = ui->IvField->text();
        strncpy(iv, qPrintable(text_iv), 15);
        qDebug() << iv;

        strcpy(text, key);
        strcat(text, iv);
        qDebug() << text;

        HRESULT hResult = FilterSendMessage(hPort, text, MESSAGE_SIZE, NULL, NULL, &BytesReturned);

        // –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
        if (IS_ERROR(hResult)) {
            std::string error = std::system_category().message(hResult);
            ui->statusLabel->setText("üõà –û—à–∏–±–∫–∞: " + QString::fromLocal8Bit(error.c_str()));
        } else {
            ui->statusLabel->setText("üõà –£—Å–ø–µ—Ö: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
        }

        disconnectPort();
    }
}

bool DriverApp::SetPrivilege()
{
    HANDLE token; // –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞
    HANDLE currentProcess;
    TOKEN_PRIVILEGES tokenPrivilege; // –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –¥–ª—è —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞
    LUID luid; // –ª–æ–∫–∞–ª—å–Ω—ã–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä

    currentProcess = GetCurrentProcess();
    OpenProcessToken(currentProcess, TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &token); // –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–∞—Ä–∫–µ—Ä –¥–æ—Å—Ç—É–ø–∞, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –ø—Ä–æ—Ü–µ—Å—Å–æ–º

    if (!LookupPrivilegeValue(NULL, SE_LOAD_DRIVER_NAME, &luid)) { // –∏–∑–≤–ª–µ–∫–∞–µv LUID –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏
        return FALSE;
    }

    tokenPrivilege.PrivilegeCount = 1;
    tokenPrivilege.Privileges[0].Luid = luid;
    tokenPrivilege.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED; // –≤–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏

    if (!AdjustTokenPrivileges(token, FALSE, &tokenPrivilege, sizeof(TOKEN_PRIVILEGES), (PTOKEN_PRIVILEGES) NULL, (PDWORD) NULL)) { // –≤–∫–ª—é—á–∞–µ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–æ–∫–µ–Ω–µ –¥–æ—Å—Ç—É–ø–∞
        return FALSE;
    }

    if (GetLastError() == ERROR_NOT_ALL_ASSIGNED){
        return FALSE;
    }

    return TRUE;
}

DriverApp::~DriverApp()
{
    delete ui;
}


